name: golangci-lint
on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read

jobs:
  go-lint:
    name: go-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: 1.23.1
      - name: go vet
        run: go vet ./...
        working-directory: .
      - name: staticcheck
        uses: dominikh/staticcheck-action@v1.3.1
        with:
          version: "2024.1.1"
          install-go: false
          working-directory: .
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.61.0

          # Optional: working directory, useful for monorepos
          working-directory: .

          # Optional: golangci-lint command line arguments.
          args: --timeout 2m --out-format=colored-line-number

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

  markdownlint:
    name: Check for Markdown errors
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Tip: run the markdown lint action locally with '--fix' to automatically fix some of the issues:
      # docker run -v $PWD:/workdir ghcr.io/igorshubovych/markdownlint-cli:latest "**/*.md" --fix
      - uses: articulate/actions-markdownlint@v1
        with:
          config: .markdownlint.json
          files: '**/*.md'