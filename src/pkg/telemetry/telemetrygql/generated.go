// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package telemetrygql

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

type CLICommand struct {
	Noun      string   `json:"noun"`
	Verb      string   `json:"verb"`
	Modifiers []string `json:"modifiers"`
}

// GetNoun returns CLICommand.Noun, and is useful for accessing the field via an interface.
func (v *CLICommand) GetNoun() string { return v.Noun }

// GetVerb returns CLICommand.Verb, and is useful for accessing the field via an interface.
func (v *CLICommand) GetVerb() string { return v.Verb }

// GetModifiers returns CLICommand.Modifiers, and is useful for accessing the field via an interface.
func (v *CLICommand) GetModifiers() []string { return v.Modifiers }

type CLIIdentifier struct {
	Version       string `json:"version"`
	ContextId     string `json:"contextId"`
	CloudClientId string `json:"cloudClientId"`
}

// GetVersion returns CLIIdentifier.Version, and is useful for accessing the field via an interface.
func (v *CLIIdentifier) GetVersion() string { return v.Version }

// GetContextId returns CLIIdentifier.ContextId, and is useful for accessing the field via an interface.
func (v *CLIIdentifier) GetContextId() string { return v.ContextId }

// GetCloudClientId returns CLIIdentifier.CloudClientId, and is useful for accessing the field via an interface.
func (v *CLIIdentifier) GetCloudClientId() string { return v.CloudClientId }

type CLITelemetry struct {
	Identifier CLIIdentifier `json:"identifier"`
	Command    CLICommand    `json:"command"`
}

// GetIdentifier returns CLITelemetry.Identifier, and is useful for accessing the field via an interface.
func (v *CLITelemetry) GetIdentifier() CLIIdentifier { return v.Identifier }

// GetCommand returns CLITelemetry.Command, and is useful for accessing the field via an interface.
func (v *CLITelemetry) GetCommand() CLICommand { return v.Command }

// SendCLITelemetryResponse is returned by SendCLITelemetry on success.
type SendCLITelemetryResponse struct {
	SendCLITelemetries bool `json:"sendCLITelemetries"`
}

// GetSendCLITelemetries returns SendCLITelemetryResponse.SendCLITelemetries, and is useful for accessing the field via an interface.
func (v *SendCLITelemetryResponse) GetSendCLITelemetries() bool { return v.SendCLITelemetries }

// __SendCLITelemetryInput is used internally by genqlient
type __SendCLITelemetryInput struct {
	Telemetry CLITelemetry `json:"telemetry"`
}

// GetTelemetry returns __SendCLITelemetryInput.Telemetry, and is useful for accessing the field via an interface.
func (v *__SendCLITelemetryInput) GetTelemetry() CLITelemetry { return v.Telemetry }

func SendCLITelemetry(
	ctx context.Context,
	client graphql.Client,
	telemetry CLITelemetry,
) (*SendCLITelemetryResponse, error) {
	req := &graphql.Request{
		OpName: "SendCLITelemetry",
		Query: `
mutation SendCLITelemetry ($telemetry: CLITelemetry!) {
	sendCLITelemetries(telemetries: [$telemetry])
}
`,
		Variables: &__SendCLITelemetryInput{
			Telemetry: telemetry,
		},
	}
	var err error

	var data SendCLITelemetryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
