// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package users

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// CreateUserFromAuth0UserCreateUserFromAuth0User includes the requested fields of the GraphQL type User.
type CreateUserFromAuth0UserCreateUserFromAuth0User struct {
	Id            string                                                      `json:"id"`
	Email         string                                                      `json:"email"`
	Auth0UserId   string                                                      `json:"auth0UserId"`
	Organization  CreateUserFromAuth0UserCreateUserFromAuth0UserOrganization  `json:"organization"`
	Auth0UserInfo CreateUserFromAuth0UserCreateUserFromAuth0UserAuth0UserInfo `json:"auth0UserInfo"`
}

// GetId returns CreateUserFromAuth0UserCreateUserFromAuth0User.Id, and is useful for accessing the field via an interface.
func (v *CreateUserFromAuth0UserCreateUserFromAuth0User) GetId() string { return v.Id }

// GetEmail returns CreateUserFromAuth0UserCreateUserFromAuth0User.Email, and is useful for accessing the field via an interface.
func (v *CreateUserFromAuth0UserCreateUserFromAuth0User) GetEmail() string { return v.Email }

// GetAuth0UserId returns CreateUserFromAuth0UserCreateUserFromAuth0User.Auth0UserId, and is useful for accessing the field via an interface.
func (v *CreateUserFromAuth0UserCreateUserFromAuth0User) GetAuth0UserId() string {
	return v.Auth0UserId
}

// GetOrganization returns CreateUserFromAuth0UserCreateUserFromAuth0User.Organization, and is useful for accessing the field via an interface.
func (v *CreateUserFromAuth0UserCreateUserFromAuth0User) GetOrganization() CreateUserFromAuth0UserCreateUserFromAuth0UserOrganization {
	return v.Organization
}

// GetAuth0UserInfo returns CreateUserFromAuth0UserCreateUserFromAuth0User.Auth0UserInfo, and is useful for accessing the field via an interface.
func (v *CreateUserFromAuth0UserCreateUserFromAuth0User) GetAuth0UserInfo() CreateUserFromAuth0UserCreateUserFromAuth0UserAuth0UserInfo {
	return v.Auth0UserInfo
}

// CreateUserFromAuth0UserCreateUserFromAuth0UserAuth0UserInfo includes the requested fields of the GraphQL type Auth0UserInfo.
type CreateUserFromAuth0UserCreateUserFromAuth0UserAuth0UserInfo struct {
	Name string `json:"name"`
}

// GetName returns CreateUserFromAuth0UserCreateUserFromAuth0UserAuth0UserInfo.Name, and is useful for accessing the field via an interface.
func (v *CreateUserFromAuth0UserCreateUserFromAuth0UserAuth0UserInfo) GetName() string { return v.Name }

// CreateUserFromAuth0UserCreateUserFromAuth0UserOrganization includes the requested fields of the GraphQL type Organization.
type CreateUserFromAuth0UserCreateUserFromAuth0UserOrganization struct {
	Id string `json:"id"`
}

// GetId returns CreateUserFromAuth0UserCreateUserFromAuth0UserOrganization.Id, and is useful for accessing the field via an interface.
func (v *CreateUserFromAuth0UserCreateUserFromAuth0UserOrganization) GetId() string { return v.Id }

// CreateUserFromAuth0UserResponse is returned by CreateUserFromAuth0User on success.
type CreateUserFromAuth0UserResponse struct {
	CreateUserFromAuth0User CreateUserFromAuth0UserCreateUserFromAuth0User `json:"createUserFromAuth0User"`
}

// GetCreateUserFromAuth0User returns CreateUserFromAuth0UserResponse.CreateUserFromAuth0User, and is useful for accessing the field via an interface.
func (v *CreateUserFromAuth0UserResponse) GetCreateUserFromAuth0User() CreateUserFromAuth0UserCreateUserFromAuth0User {
	return v.CreateUserFromAuth0User
}

// GetUserByAuth0UserResponse is returned by GetUserByAuth0User on success.
type GetUserByAuth0UserResponse struct {
	UserByAuth0User GetUserByAuth0UserUserByAuth0User `json:"userByAuth0User"`
}

// GetUserByAuth0User returns GetUserByAuth0UserResponse.UserByAuth0User, and is useful for accessing the field via an interface.
func (v *GetUserByAuth0UserResponse) GetUserByAuth0User() GetUserByAuth0UserUserByAuth0User {
	return v.UserByAuth0User
}

// GetUserByAuth0UserUserByAuth0User includes the requested fields of the GraphQL type User.
type GetUserByAuth0UserUserByAuth0User struct {
	Id            string                                         `json:"id"`
	Email         string                                         `json:"email"`
	Auth0UserId   string                                         `json:"auth0UserId"`
	Organization  GetUserByAuth0UserUserByAuth0UserOrganization  `json:"organization"`
	Auth0UserInfo GetUserByAuth0UserUserByAuth0UserAuth0UserInfo `json:"auth0UserInfo"`
}

// GetId returns GetUserByAuth0UserUserByAuth0User.Id, and is useful for accessing the field via an interface.
func (v *GetUserByAuth0UserUserByAuth0User) GetId() string { return v.Id }

// GetEmail returns GetUserByAuth0UserUserByAuth0User.Email, and is useful for accessing the field via an interface.
func (v *GetUserByAuth0UserUserByAuth0User) GetEmail() string { return v.Email }

// GetAuth0UserId returns GetUserByAuth0UserUserByAuth0User.Auth0UserId, and is useful for accessing the field via an interface.
func (v *GetUserByAuth0UserUserByAuth0User) GetAuth0UserId() string { return v.Auth0UserId }

// GetOrganization returns GetUserByAuth0UserUserByAuth0User.Organization, and is useful for accessing the field via an interface.
func (v *GetUserByAuth0UserUserByAuth0User) GetOrganization() GetUserByAuth0UserUserByAuth0UserOrganization {
	return v.Organization
}

// GetAuth0UserInfo returns GetUserByAuth0UserUserByAuth0User.Auth0UserInfo, and is useful for accessing the field via an interface.
func (v *GetUserByAuth0UserUserByAuth0User) GetAuth0UserInfo() GetUserByAuth0UserUserByAuth0UserAuth0UserInfo {
	return v.Auth0UserInfo
}

// GetUserByAuth0UserUserByAuth0UserAuth0UserInfo includes the requested fields of the GraphQL type Auth0UserInfo.
type GetUserByAuth0UserUserByAuth0UserAuth0UserInfo struct {
	Name string `json:"name"`
}

// GetName returns GetUserByAuth0UserUserByAuth0UserAuth0UserInfo.Name, and is useful for accessing the field via an interface.
func (v *GetUserByAuth0UserUserByAuth0UserAuth0UserInfo) GetName() string { return v.Name }

// GetUserByAuth0UserUserByAuth0UserOrganization includes the requested fields of the GraphQL type Organization.
type GetUserByAuth0UserUserByAuth0UserOrganization struct {
	Id string `json:"id"`
}

// GetId returns GetUserByAuth0UserUserByAuth0UserOrganization.Id, and is useful for accessing the field via an interface.
func (v *GetUserByAuth0UserUserByAuth0UserOrganization) GetId() string { return v.Id }

func CreateUserFromAuth0User(
	ctx context.Context,
	client graphql.Client,
) (*CreateUserFromAuth0UserResponse, error) {
	req := &graphql.Request{
		OpName: "CreateUserFromAuth0User",
		Query: `
mutation CreateUserFromAuth0User {
	createUserFromAuth0User {
		id
		email
		auth0UserId
		organization {
			id
		}
		auth0UserInfo {
			name
		}
	}
}
`,
	}
	var err error

	var data CreateUserFromAuth0UserResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetUserByAuth0User(
	ctx context.Context,
	client graphql.Client,
) (*GetUserByAuth0UserResponse, error) {
	req := &graphql.Request{
		OpName: "GetUserByAuth0User",
		Query: `
query GetUserByAuth0User {
	userByAuth0User {
		id
		email
		auth0UserId
		organization {
			id
		}
		auth0UserInfo {
			name
		}
	}
}
`,
	}
	var err error

	var data GetUserByAuth0UserResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
