// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package invites

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// AcceptInviteResponse is returned by AcceptInvite on success.
type AcceptInviteResponse struct {
	// Accept user invite
	AcceptInvite string `json:"acceptInvite"`
}

// GetAcceptInvite returns AcceptInviteResponse.AcceptInvite, and is useful for accessing the field via an interface.
func (v *AcceptInviteResponse) GetAcceptInvite() string { return v.AcceptInvite }

// CreateInviteCreateInvite includes the requested fields of the GraphQL type Invite.
type CreateInviteCreateInvite struct {
	Id           string                               `json:"id"`
	Email        string                               `json:"email"`
	Organization CreateInviteCreateInviteOrganization `json:"organization"`
}

// GetId returns CreateInviteCreateInvite.Id, and is useful for accessing the field via an interface.
func (v *CreateInviteCreateInvite) GetId() string { return v.Id }

// GetEmail returns CreateInviteCreateInvite.Email, and is useful for accessing the field via an interface.
func (v *CreateInviteCreateInvite) GetEmail() string { return v.Email }

// GetOrganization returns CreateInviteCreateInvite.Organization, and is useful for accessing the field via an interface.
func (v *CreateInviteCreateInvite) GetOrganization() CreateInviteCreateInviteOrganization {
	return v.Organization
}

// CreateInviteCreateInviteOrganization includes the requested fields of the GraphQL type Organization.
type CreateInviteCreateInviteOrganization struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns CreateInviteCreateInviteOrganization.Id, and is useful for accessing the field via an interface.
func (v *CreateInviteCreateInviteOrganization) GetId() string { return v.Id }

// GetName returns CreateInviteCreateInviteOrganization.Name, and is useful for accessing the field via an interface.
func (v *CreateInviteCreateInviteOrganization) GetName() string { return v.Name }

// CreateInviteResponse is returned by CreateInvite on success.
type CreateInviteResponse struct {
	// Create user invite
	CreateInvite CreateInviteCreateInvite `json:"createInvite"`
}

// GetCreateInvite returns CreateInviteResponse.CreateInvite, and is useful for accessing the field via an interface.
func (v *CreateInviteResponse) GetCreateInvite() CreateInviteCreateInvite { return v.CreateInvite }

// DeleteInviteResponse is returned by DeleteInvite on success.
type DeleteInviteResponse struct {
	// Delete user invite
	DeleteInvite string `json:"deleteInvite"`
}

// GetDeleteInvite returns DeleteInviteResponse.DeleteInvite, and is useful for accessing the field via an interface.
func (v *DeleteInviteResponse) GetDeleteInvite() string { return v.DeleteInvite }

// GetInviteInvite includes the requested fields of the GraphQL type Invite.
type GetInviteInvite struct {
	Id           string                      `json:"id"`
	Email        string                      `json:"email"`
	Organization GetInviteInviteOrganization `json:"organization"`
}

// GetId returns GetInviteInvite.Id, and is useful for accessing the field via an interface.
func (v *GetInviteInvite) GetId() string { return v.Id }

// GetEmail returns GetInviteInvite.Email, and is useful for accessing the field via an interface.
func (v *GetInviteInvite) GetEmail() string { return v.Email }

// GetOrganization returns GetInviteInvite.Organization, and is useful for accessing the field via an interface.
func (v *GetInviteInvite) GetOrganization() GetInviteInviteOrganization { return v.Organization }

// GetInviteInviteOrganization includes the requested fields of the GraphQL type Organization.
type GetInviteInviteOrganization struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns GetInviteInviteOrganization.Id, and is useful for accessing the field via an interface.
func (v *GetInviteInviteOrganization) GetId() string { return v.Id }

// GetName returns GetInviteInviteOrganization.Name, and is useful for accessing the field via an interface.
func (v *GetInviteInviteOrganization) GetName() string { return v.Name }

// GetInviteResponse is returned by GetInvite on success.
type GetInviteResponse struct {
	// Get user invite
	Invite GetInviteInvite `json:"invite"`
}

// GetInvite returns GetInviteResponse.Invite, and is useful for accessing the field via an interface.
func (v *GetInviteResponse) GetInvite() GetInviteInvite { return v.Invite }

// ListInvitesInvitesInvite includes the requested fields of the GraphQL type Invite.
type ListInvitesInvitesInvite struct {
	Id           string                               `json:"id"`
	Email        string                               `json:"email"`
	Organization ListInvitesInvitesInviteOrganization `json:"organization"`
}

// GetId returns ListInvitesInvitesInvite.Id, and is useful for accessing the field via an interface.
func (v *ListInvitesInvitesInvite) GetId() string { return v.Id }

// GetEmail returns ListInvitesInvitesInvite.Email, and is useful for accessing the field via an interface.
func (v *ListInvitesInvitesInvite) GetEmail() string { return v.Email }

// GetOrganization returns ListInvitesInvitesInvite.Organization, and is useful for accessing the field via an interface.
func (v *ListInvitesInvitesInvite) GetOrganization() ListInvitesInvitesInviteOrganization {
	return v.Organization
}

// ListInvitesInvitesInviteOrganization includes the requested fields of the GraphQL type Organization.
type ListInvitesInvitesInviteOrganization struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns ListInvitesInvitesInviteOrganization.Id, and is useful for accessing the field via an interface.
func (v *ListInvitesInvitesInviteOrganization) GetId() string { return v.Id }

// GetName returns ListInvitesInvitesInviteOrganization.Name, and is useful for accessing the field via an interface.
func (v *ListInvitesInvitesInviteOrganization) GetName() string { return v.Name }

// ListInvitesResponse is returned by ListInvites on success.
type ListInvitesResponse struct {
	// List user invites
	Invites []ListInvitesInvitesInvite `json:"invites"`
}

// GetInvites returns ListInvitesResponse.Invites, and is useful for accessing the field via an interface.
func (v *ListInvitesResponse) GetInvites() []ListInvitesInvitesInvite { return v.Invites }

// __AcceptInviteInput is used internally by genqlient
type __AcceptInviteInput struct {
	Id string `json:"id"`
}

// GetId returns __AcceptInviteInput.Id, and is useful for accessing the field via an interface.
func (v *__AcceptInviteInput) GetId() string { return v.Id }

// __CreateInviteInput is used internally by genqlient
type __CreateInviteInput struct {
	Email string `json:"email"`
}

// GetEmail returns __CreateInviteInput.Email, and is useful for accessing the field via an interface.
func (v *__CreateInviteInput) GetEmail() string { return v.Email }

// __DeleteInviteInput is used internally by genqlient
type __DeleteInviteInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteInviteInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteInviteInput) GetId() string { return v.Id }

// __GetInviteInput is used internally by genqlient
type __GetInviteInput struct {
	Id string `json:"id"`
}

// GetId returns __GetInviteInput.Id, and is useful for accessing the field via an interface.
func (v *__GetInviteInput) GetId() string { return v.Id }

func AcceptInvite(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*AcceptInviteResponse, error) {
	req := &graphql.Request{
		OpName: "AcceptInvite",
		Query: `
mutation AcceptInvite ($id: ID!) {
	acceptInvite(id: $id)
}
`,
		Variables: &__AcceptInviteInput{
			Id: id,
		},
	}
	var err error

	var data AcceptInviteResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateInvite(
	ctx context.Context,
	client graphql.Client,
	email string,
) (*CreateInviteResponse, error) {
	req := &graphql.Request{
		OpName: "CreateInvite",
		Query: `
mutation CreateInvite ($email: String!) {
	createInvite(email: $email) {
		id
		email
		organization {
			id
			name
		}
	}
}
`,
		Variables: &__CreateInviteInput{
			Email: email,
		},
	}
	var err error

	var data CreateInviteResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteInvite(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteInviteResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteInvite",
		Query: `
mutation DeleteInvite ($id: ID!) {
	deleteInvite(id: $id)
}
`,
		Variables: &__DeleteInviteInput{
			Id: id,
		},
	}
	var err error

	var data DeleteInviteResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetInvite(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetInviteResponse, error) {
	req := &graphql.Request{
		OpName: "GetInvite",
		Query: `
query GetInvite ($id: ID!) {
	invite(id: $id) {
		id
		email
		organization {
			id
			name
		}
	}
}
`,
		Variables: &__GetInviteInput{
			Id: id,
		},
	}
	var err error

	var data GetInviteResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func ListInvites(
	ctx context.Context,
	client graphql.Client,
) (*ListInvitesResponse, error) {
	req := &graphql.Request{
		OpName: "ListInvites",
		Query: `
query ListInvites {
	invites {
		id
		email
		organization {
			id
			name
		}
	}
}
`,
	}
	var err error

	var data ListInvitesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
