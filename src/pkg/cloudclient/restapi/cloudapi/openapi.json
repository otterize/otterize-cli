{
  "components": {
    "responses": {
      "BAD_REQUEST": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Bad Request"
      },
      "BAD_USER_INPUT": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Unprocessable Entity"
      },
      "CONFLICT": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Conflict"
      },
      "FORBIDDEN": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Forbidden"
      },
      "INTERNAL_SERVER_ERROR": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Internal Server Error"
      },
      "NOT_FOUND": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Not Found"
      },
      "UNAUTHENTICATED": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Unauthorized"
      },
      "UNEXPECTED_ERROR": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "AccessGraph": {
        "properties": {
          "clusters": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "filter": {
            "$ref": "#/components/schemas/AccessGraphFilter"
          },
          "serviceAccessGraphs": {
            "items": {
              "$ref": "#/components/schemas/ServiceAccessGraph"
            },
            "type": "array"
          }
        },
        "required": [
          "filter",
          "clusters",
          "serviceAccessGraphs"
        ],
        "type": "object"
      },
      "AccessGraphEdge": {
        "properties": {
          "accessStatus": {
            "$ref": "#/components/schemas/EdgeAccessStatus"
          },
          "appliedIntents": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "client": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "discoveredIntents": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "server": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          }
        },
        "required": [
          "client",
          "server",
          "discoveredIntents",
          "appliedIntents",
          "accessStatus"
        ],
        "type": "object"
      },
      "AccessGraphFilter": {
        "properties": {
          "clusterIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "environmentIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includeServicesWithNoEdges": {
            "type": "boolean"
          },
          "lastSeenAfter": {
            "format": "date-time",
            "type": "string"
          },
          "namespaceIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "serviceIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CertificateInformation": {
        "properties": {
          "commonName": {
            "type": "string"
          },
          "dnsNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ttl": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "commonName"
        ],
        "type": "object"
      },
      "Cluster": {
        "properties": {
          "components": {
            "$ref": "#/components/schemas/IntegrationComponents"
          },
          "configuration": {
            "$ref": "#/components/schemas/ClusterConfiguration"
          },
          "defaultEnvironment": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "integration": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespaces": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "serviceCount": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "namespaces",
          "serviceCount",
          "components"
        ],
        "type": "object"
      },
      "ClusterConfiguration": {
        "properties": {
          "globalDefaultDeny": {
            "type": "boolean"
          },
          "useNetworkPoliciesInAccessGraphStates": {
            "type": "boolean"
          }
        },
        "required": [
          "globalDefaultDeny",
          "useNetworkPoliciesInAccessGraphStates"
        ],
        "type": "object"
      },
      "ClusterConfigurationInput": {
        "properties": {
          "globalDefaultDeny": {
            "type": "boolean"
          },
          "useNetworkPoliciesInAccessGraphStates": {
            "type": "boolean"
          }
        },
        "required": [
          "globalDefaultDeny",
          "useNetworkPoliciesInAccessGraphStates"
        ],
        "type": "object"
      },
      "ComponentStatus": {
        "properties": {
          "lastSeen": {
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "enum": [
              "NOT_INTEGRATED",
              "CONNECTED",
              "DISCONNECTED"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "CredentialsOperatorComponent": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "type": {
            "enum": [
              "INTENTS_OPERATOR",
              "CREDENTIALS_OPERATOR",
              "NETWORK_MAPPER"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "status"
        ],
        "type": "object"
      },
      "EdgeAccessStatus": {
        "properties": {
          "reason": {
            "enum": [
              "ALLOWED_BY_APPLIED_INTENTS",
              "ALLOWED_BY_APPLIED_INTENTS_OVERLY_PERMISSIVE",
              "BLOCKED_BY_DEFAULT_DENY",
              "INTENTS_OPERATOR_NOT_ENFORCING",
              "INTENTS_OPERATOR_NOT_ENFORCING_MISSING_APPLIED_INTENT",
              "MISSING_APPLIED_INTENT",
              "INTENTS_OPERATOR_NEVER_CONNECTED",
              "NETWORK_MAPPER_NEVER_CONNECTED"
            ],
            "type": "string"
          },
          "useNetworkPoliciesInAccessGraphStates": {
            "type": "boolean"
          },
          "verdict": {
            "enum": [
              "EXPLICITLY_ALLOWED",
              "IMPLICITLY_ALLOWED",
              "WOULD_BE_BLOCKED",
              "BLOCKED",
              "UNKNOWN"
            ],
            "type": "string"
          }
        },
        "required": [
          "useNetworkPoliciesInAccessGraphStates",
          "verdict",
          "reason"
        ],
        "type": "object"
      },
      "Environment": {
        "properties": {
          "appliedIntentsCount": {
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "labels": {
            "items": {
              "$ref": "#/components/schemas/Label"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "namespaces": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "serviceCount": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "namespaces",
          "serviceCount",
          "appliedIntentsCount"
        ],
        "type": "object"
      },
      "Error": {
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "HTTPConfig": {
        "properties": {
          "methods": {
            "items": {
              "enum": [
                "GET",
                "POST",
                "PUT",
                "DELETE",
                "OPTIONS",
                "TRACE",
                "PATCH",
                "CONNECT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "path": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "InputAccessGraphFilter": {
        "properties": {
          "clusterIds": {
            "items": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            },
            "type": "array"
          },
          "environmentIds": {
            "items": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            },
            "type": "array"
          },
          "includeServicesWithNoEdges": {
            "type": "boolean"
          },
          "lastSeenAfter": {
            "format": "date-time",
            "type": "string"
          },
          "namespaceIds": {
            "items": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            },
            "type": "array"
          },
          "serviceIds": {
            "items": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Integration": {
        "properties": {
          "cluster": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "components": {
            "$ref": "#/components/schemas/IntegrationComponents"
          },
          "credentials": {
            "$ref": "#/components/schemas/IntegrationCredentials"
          },
          "defaultEnvironment": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "enum": [
              "GENERIC",
              "KUBERNETES"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "credentials"
        ],
        "type": "object"
      },
      "IntegrationComponents": {
        "properties": {
          "credentialsOperator": {
            "$ref": "#/components/schemas/CredentialsOperatorComponent"
          },
          "intentsOperator": {
            "$ref": "#/components/schemas/IntentsOperatorComponent"
          },
          "networkMapper": {
            "$ref": "#/components/schemas/NetworkMapperComponent"
          }
        },
        "required": [
          "intentsOperator",
          "credentialsOperator",
          "networkMapper"
        ],
        "type": "object"
      },
      "IntegrationCredentials": {
        "properties": {
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          }
        },
        "required": [
          "clientId",
          "clientSecret"
        ],
        "type": "object"
      },
      "Intent": {
        "properties": {
          "client": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "httpResources": {
            "items": {
              "$ref": "#/components/schemas/HTTPConfig"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "kafkaTopics": {
            "items": {
              "$ref": "#/components/schemas/KafkaConfig"
            },
            "type": "array"
          },
          "server": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "type": {
            "enum": [
              "HTTP",
              "KAFKA"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "server",
          "client"
        ],
        "type": "object"
      },
      "IntentsOperatorComponent": {
        "properties": {
          "configuration": {
            "$ref": "#/components/schemas/IntentsOperatorConfiguration"
          },
          "status": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "type": {
            "enum": [
              "INTENTS_OPERATOR",
              "CREDENTIALS_OPERATOR",
              "NETWORK_MAPPER"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "status"
        ],
        "type": "object"
      },
      "IntentsOperatorConfiguration": {
        "properties": {
          "globalEnforcementEnabled": {
            "type": "boolean"
          },
          "kafkaACLEnforcementEnabled": {
            "type": "boolean"
          },
          "networkPolicyEnforcementEnabled": {
            "type": "boolean"
          }
        },
        "required": [
          "globalEnforcementEnabled",
          "networkPolicyEnforcementEnabled",
          "kafkaACLEnforcementEnabled"
        ],
        "type": "object"
      },
      "Invite": {
        "properties": {
          "acceptedAt": {
            "format": "date-time",
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "inviter": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "organization": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "status": {
            "enum": [
              "PENDING",
              "ACCEPTED"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "organization",
          "inviter",
          "created",
          "status"
        ],
        "type": "object"
      },
      "KafkaConfig": {
        "properties": {
          "name": {
            "type": "string"
          },
          "operations": {
            "items": {
              "enum": [
                "ALL",
                "CONSUME",
                "PRODUCE",
                "CREATE",
                "ALTER",
                "DELETE",
                "DESCRIBE",
                "CLUSTER_ACTION",
                "DESCRIBE_CONFIGS",
                "ALTER_CONFIGS",
                "IDEMPOTENT_WRITE"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "KafkaServerConfig": {
        "properties": {
          "address": {
            "type": "string"
          },
          "topics": {
            "items": {
              "$ref": "#/components/schemas/KafkaTopic"
            },
            "type": "array"
          }
        },
        "required": [
          "topics"
        ],
        "type": "object"
      },
      "KafkaTopic": {
        "properties": {
          "clientIdentityRequired": {
            "type": "boolean"
          },
          "intentsRequired": {
            "type": "boolean"
          },
          "pattern": {
            "enum": [
              "LITERAL",
              "PREFIX"
            ],
            "type": "string"
          },
          "topic": {
            "type": "string"
          }
        },
        "required": [
          "clientIdentityRequired",
          "intentsRequired",
          "pattern",
          "topic"
        ],
        "type": "object"
      },
      "Label": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "key"
        ],
        "type": "object"
      },
      "LabelInput": {
        "properties": {
          "key": {
            "example": "label-key-1",
            "format": "label-name",
            "pattern": "^[a-z][a-z0-9-]{0,61}[a-z0-9]$",
            "type": "string"
          },
          "value": {
            "example": "label value",
            "format": "non-empty",
            "pattern": ".+",
            "type": "string"
          }
        },
        "required": [
          "key"
        ],
        "type": "object"
      },
      "Me": {
        "properties": {
          "invites": {
            "items": {
              "$ref": "#/components/schemas/Invite"
            },
            "type": "array"
          },
          "organizations": {
            "items": {
              "$ref": "#/components/schemas/Organization"
            },
            "type": "array"
          },
          "user": {
            "$ref": "#/components/schemas/User",
            "description": "The logged-in user details."
          }
        },
        "required": [
          "user",
          "organizations",
          "invites"
        ],
        "type": "object"
      },
      "Namespace": {
        "properties": {
          "cluster": {
            "$ref": "#/components/schemas/Cluster"
          },
          "environment": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "serviceCount": {
            "format": "int32",
            "type": "integer"
          },
          "services": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "name",
          "cluster",
          "environment",
          "services",
          "serviceCount"
        ],
        "type": "object"
      },
      "NetworkMapperComponent": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "type": {
            "enum": [
              "INTENTS_OPERATOR",
              "CREDENTIALS_OPERATOR",
              "NETWORK_MAPPER"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "status"
        ],
        "type": "object"
      },
      "Organization": {
        "properties": {
          "id": {
            "type": "string"
          },
          "imageURL": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "ServerBlockingStatus": {
        "properties": {
          "reason": {
            "enum": [
              "INTENTS_OPERATOR_NEVER_CONNECTED",
              "NETWORK_MAPPER_NEVER_CONNECTED",
              "INTENTS_IMPLICITLY_ALLOWED",
              "ALL_INTENTS_APPLIED",
              "MISSING_APPLIED_INTENTS",
              "INTENTS_OPERATOR_NOT_ENFORCING"
            ],
            "type": "string"
          },
          "verdict": {
            "enum": [
              "UNKNOWN",
              "NOT_BLOCKING",
              "WOULD_BLOCK",
              "BLOCKING"
            ],
            "type": "string"
          }
        },
        "required": [
          "verdict",
          "reason"
        ],
        "type": "object"
      },
      "ServerProtectionStatus": {
        "properties": {
          "reason": {
            "enum": [
              "INTENTS_OPERATOR_NEVER_CONNECTED",
              "INTENTS_OPERATOR_NOT_ENFORCING",
              "SERVER_HAS_NO_NETWORK_POLICY",
              "PROTECTED_BY_DEFAULT_DENY",
              "PROTECTED_BY_SERVER_NETWORK_POLICY"
            ],
            "type": "string"
          },
          "verdict": {
            "enum": [
              "UNKNOWN",
              "UNPROTECTED",
              "PROTECTED"
            ],
            "type": "string"
          }
        },
        "required": [
          "verdict",
          "reason"
        ],
        "type": "object"
      },
      "Service": {
        "properties": {
          "certificateInformation": {
            "$ref": "#/components/schemas/CertificateInformation"
          },
          "environment": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "kafkaServerConfig": {
            "$ref": "#/components/schemas/KafkaServerConfig",
            "description": "If service is Kafka, its KafkaServerConfig."
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "required": [
          "id",
          "name",
          "environment"
        ],
        "type": "object"
      },
      "ServiceAccessGraph": {
        "properties": {
          "accessStatus": {
            "$ref": "#/components/schemas/ServiceAccessStatus"
          },
          "calls": {
            "items": {
              "$ref": "#/components/schemas/AccessGraphEdge"
            },
            "type": "array"
          },
          "serves": {
            "items": {
              "$ref": "#/components/schemas/AccessGraphEdge"
            },
            "type": "array"
          },
          "service": {
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          }
        },
        "required": [
          "service",
          "accessStatus",
          "calls",
          "serves"
        ],
        "type": "object"
      },
      "ServiceAccessStatus": {
        "properties": {
          "blockingStatus": {
            "$ref": "#/components/schemas/ServerBlockingStatus"
          },
          "hasAppliedIntents": {
            "type": "boolean"
          },
          "protectionStatus": {
            "$ref": "#/components/schemas/ServerProtectionStatus"
          },
          "useNetworkPoliciesInAccessGraphStates": {
            "type": "boolean"
          }
        },
        "required": [
          "useNetworkPoliciesInAccessGraphStates",
          "protectionStatus",
          "blockingStatus",
          "hasAppliedIntents"
        ],
        "type": "object"
      },
      "User": {
        "properties": {
          "authProviderUserId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "imageURL": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "imageURL",
          "authProviderUserId"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "accessTokenCookie": {
        "description": "Otterize user JWT token. This session cookie is automatically set by logging in to Otterize Cloud at http://local.otterize.com:3000.",
        "in": "cookie",
        "name": "access_token",
        "type": "apiKey"
      },
      "bearerAuth": {
        "bearerFormat": "JWT",
        "description": "Otterize user JWT token.",
        "scheme": "bearer",
        "type": "http"
      },
      "oauth2": {
        "description": "Use client ID and client secret from an Otterize integration to authenticate.\nTo create an integration, go to http://local.otterize.com:3000/integrations.",
        "flows": {
          "clientCredentials": {
            "scopes": {
            },
            "tokenUrl": "/api/auth/tokens/token"
          }
        },
        "type": "oauth2"
      },
      "organizationCookie": {
        "description": "Selected organization ID cookie. This session cookie is automatically set by logging in to Otterize Cloud at http://local.otterize.com:3000.",
        "in": "cookie",
        "name": "organization_id",
        "type": "apiKey"
      },
      "organizationHeader": {
        "description": "Selected organization ID. Leave blank to auto-select the first organization for the current user.",
        "in": "header",
        "name": "X-Otterize-Organization",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "title": "Otterize API Server",
    "version": "v1beta",
    "x-revision": "8cb9084cfb5ba5de06df85efb33a037606e03c67"
  },
  "openapi": "3.0.0",
  "paths": {
    "/access-graph": {
      "post": {
        "description": "Get access graph",
        "operationId": "accessGraph_query",
        "parameters": [
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "filter": {
                    "$ref": "#/components/schemas/InputAccessGraphFilter"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessGraph"
                }
              }
            },
            "description": "Get access graph"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get access graph",
        "tags": [
          "access graph"
        ]
      }
    },
    "/cluster": {
      "get": {
        "description": "Get cluster by filters",
        "operationId": "oneCluster_query",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "Object name",
              "format": "custom-name",
              "pattern": "^[A-Za-z][A-Za-z0-9- _]{0,61}[A-Za-z0-9]$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Get cluster by filters"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get cluster by filters",
        "tags": [
          "clusters"
        ]
      }
    },
    "/clusters": {
      "get": {
        "description": "List clusters",
        "operationId": "clusters_query",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "example": "Object name",
              "format": "custom-name",
              "pattern": "^[A-Za-z][A-Za-z0-9- _]{0,61}[A-Za-z0-9]$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Cluster"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List clusters"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "List clusters",
        "tags": [
          "clusters"
        ]
      },
      "post": {
        "description": "Create cluster",
        "operationId": "createCluster_mutation",
        "parameters": [
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "example": "Object name",
                    "format": "custom-name",
                    "pattern": "^[A-Za-z][A-Za-z0-9- _]{0,61}[A-Za-z0-9]$",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Create cluster"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Create cluster",
        "tags": [
          "clusters"
        ]
      }
    },
    "/clusters/{id}": {
      "delete": {
        "description": "Delete cluster",
        "operationId": "deleteCluster_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Delete cluster"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Delete cluster",
        "tags": [
          "clusters"
        ]
      },
      "get": {
        "description": "Get cluster",
        "operationId": "cluster_query",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Get cluster"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get cluster",
        "tags": [
          "clusters"
        ]
      },
      "patch": {
        "description": "Update cluster",
        "operationId": "updateCluster_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "configuration": {
                    "$ref": "#/components/schemas/ClusterConfigurationInput"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Update cluster"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Update cluster",
        "tags": [
          "clusters"
        ]
      }
    },
    "/environment": {
      "get": {
        "description": "Get environment by filters",
        "operationId": "oneEnvironment_query",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "example": "Object name",
              "format": "custom-name",
              "pattern": "^[A-Za-z][A-Za-z0-9- _]{0,61}[A-Za-z0-9]$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            },
            "description": "Get environment by filters"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get environment by filters",
        "tags": [
          "environments"
        ]
      }
    },
    "/environments": {
      "get": {
        "description": "List environments",
        "operationId": "environments_query",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "example": "Object name",
              "format": "custom-name",
              "pattern": "^[A-Za-z][A-Za-z0-9- _]{0,61}[A-Za-z0-9]$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Environment"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List environments"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "List environments",
        "tags": [
          "environments"
        ]
      },
      "post": {
        "description": "Create a new environment",
        "operationId": "createEnvironment_mutation",
        "parameters": [
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "labels": {
                    "items": {
                      "$ref": "#/components/schemas/LabelInput"
                    },
                    "type": "array"
                  },
                  "name": {
                    "example": "Object name",
                    "format": "custom-name",
                    "pattern": "^[A-Za-z][A-Za-z0-9- _]{0,61}[A-Za-z0-9]$",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            },
            "description": "Create a new environment"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Create a new environment",
        "tags": [
          "environments"
        ]
      }
    },
    "/environments/{id}": {
      "delete": {
        "description": "Delete environment",
        "operationId": "deleteEnvironment_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Delete environment"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Delete environment",
        "tags": [
          "environments"
        ]
      },
      "get": {
        "description": "Get environment",
        "operationId": "environment_query",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            },
            "description": "Get environment"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get environment",
        "tags": [
          "environments"
        ]
      },
      "patch": {
        "description": "Update environment",
        "operationId": "updateEnvironment_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "labels": {
                    "items": {
                      "$ref": "#/components/schemas/LabelInput"
                    },
                    "type": "array"
                  },
                  "name": {
                    "example": "Object name",
                    "format": "custom-name",
                    "pattern": "^[A-Za-z][A-Za-z0-9- _]{0,61}[A-Za-z0-9]$",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            },
            "description": "Update environment"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Update environment",
        "tags": [
          "environments"
        ]
      }
    },
    "/environments/{id}/labels": {
      "post": {
        "description": "Add label to environment",
        "operationId": "addEnvironmentLabel_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "label": {
                    "$ref": "#/components/schemas/LabelInput"
                  }
                },
                "required": [
                  "label"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            },
            "description": "Add label to environment"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Add label to environment",
        "tags": [
          "environments"
        ]
      }
    },
    "/environments/{id}/labels/{key}": {
      "delete": {
        "description": "Remove label from environment",
        "operationId": "deleteEnvironmentLabel_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "example": "label-key-1",
              "format": "label-name",
              "pattern": "^[a-z][a-z0-9-]{0,61}[a-z0-9]$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            },
            "description": "Remove label from environment"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Remove label from environment",
        "tags": [
          "environments"
        ]
      }
    },
    "/integration": {
      "get": {
        "description": "Get integration by filters",
        "operationId": "oneIntegration_query",
        "parameters": [
          {
            "in": "query",
            "name": "integrationType",
            "required": false,
            "schema": {
              "enum": [
                "GENERIC",
                "KUBERNETES"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environmentId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "clusterId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "example": "Object name",
              "format": "custom-name",
              "pattern": "^[A-Za-z][A-Za-z0-9- _]{0,61}[A-Za-z0-9]$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            },
            "description": "Get integration by filters"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get integration by filters",
        "tags": [
          "integrations"
        ]
      }
    },
    "/integrations": {
      "get": {
        "description": "List integrations",
        "operationId": "integrations_query",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "example": "Object name",
              "format": "custom-name",
              "pattern": "^[A-Za-z][A-Za-z0-9- _]{0,61}[A-Za-z0-9]$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "integrationType",
            "required": false,
            "schema": {
              "enum": [
                "GENERIC",
                "KUBERNETES"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environmentId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "clusterId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Integration"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List integrations"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "List integrations",
        "tags": [
          "integrations"
        ]
      }
    },
    "/integrations/generic": {
      "post": {
        "description": "Create a new generic integration",
        "operationId": "createGenericIntegration_mutation",
        "parameters": [
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "example": "Object name",
                    "format": "custom-name",
                    "pattern": "^[A-Za-z][A-Za-z0-9- _]{0,61}[A-Za-z0-9]$",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            },
            "description": "Create a new generic integration"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Create a new generic integration",
        "tags": [
          "integrations"
        ]
      }
    },
    "/integrations/generic/{id}": {
      "patch": {
        "description": "Update Generic integration",
        "operationId": "updateGenericIntegration_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "example": "Object name",
                    "format": "custom-name",
                    "pattern": "^[A-Za-z][A-Za-z0-9- _]{0,61}[A-Za-z0-9]$",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            },
            "description": "Update Generic integration"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Update Generic integration",
        "tags": [
          "integrations"
        ]
      }
    },
    "/integrations/kubernetes": {
      "post": {
        "description": "Create a new Kubernetes integration",
        "operationId": "createKubernetesIntegration_mutation",
        "parameters": [
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "clusterId": {
                    "example": "obj_12345",
                    "format": "id",
                    "pattern": "^[A-Za-z]+_[a-z0-9]+$",
                    "type": "string"
                  },
                  "environmentId": {
                    "example": "obj_12345",
                    "format": "id",
                    "pattern": "^[A-Za-z]+_[a-z0-9]+$",
                    "type": "string"
                  }
                },
                "required": [
                  "clusterId"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            },
            "description": "Create a new Kubernetes integration"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Create a new Kubernetes integration",
        "tags": [
          "integrations"
        ]
      }
    },
    "/integrations/kubernetes/{id}": {
      "patch": {
        "description": "Update Kubernetes integration",
        "operationId": "updateKubernetesIntegration_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "environmentId": {
                    "example": "obj_12345",
                    "format": "id",
                    "pattern": "^[A-Za-z]+_[a-z0-9]+$",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            },
            "description": "Update Kubernetes integration"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Update Kubernetes integration",
        "tags": [
          "integrations"
        ]
      }
    },
    "/integrations/{id}": {
      "delete": {
        "description": "Delete integration",
        "operationId": "deleteIntegration_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Delete integration"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Delete integration",
        "tags": [
          "integrations"
        ]
      },
      "get": {
        "description": "Get integration",
        "operationId": "integration_query",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            },
            "description": "Get integration"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get integration",
        "tags": [
          "integrations"
        ]
      }
    },
    "/intents": {
      "get": {
        "description": "List intents",
        "operationId": "intents_query",
        "parameters": [
          {
            "in": "query",
            "name": "environmentId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "clientId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "serverId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Intent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List intents"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "List intents",
        "tags": [
          "intents"
        ]
      }
    },
    "/intents/{id}": {
      "get": {
        "description": "Get intent",
        "operationId": "intent_query",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Intent"
                }
              }
            },
            "description": "Get intent"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get intent",
        "tags": [
          "intents"
        ]
      }
    },
    "/invite": {
      "get": {
        "description": "Get one user invite",
        "operationId": "oneInvite_query",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "format": "email",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                "PENDING",
                "ACCEPTED"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            },
            "description": "Get one user invite"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get one user invite",
        "tags": [
          "invites"
        ]
      }
    },
    "/invites": {
      "get": {
        "description": "List user invites",
        "operationId": "invites_query",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "format": "email",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                "PENDING",
                "ACCEPTED"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Invite"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List user invites"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "List user invites",
        "tags": [
          "invites"
        ]
      },
      "post": {
        "description": "Create user invite",
        "operationId": "createInvite_mutation",
        "parameters": [
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "format": "email",
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            },
            "description": "Create user invite"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Create user invite",
        "tags": [
          "invites"
        ]
      }
    },
    "/invites/{id}": {
      "delete": {
        "description": "Delete user invite",
        "operationId": "deleteInvite_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Delete user invite"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Delete user invite",
        "tags": [
          "invites"
        ]
      },
      "get": {
        "description": "Get user invite",
        "operationId": "invite_query",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            },
            "description": "Get user invite"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get user invite",
        "tags": [
          "invites"
        ]
      },
      "patch": {
        "description": "Accept user invite",
        "operationId": "acceptInvite_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            },
            "description": "Accept user invite"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Accept user invite",
        "tags": [
          "invites"
        ]
      }
    },
    "/me": {
      "get": {
        "description": "Get information regarding the current logged-in user",
        "operationId": "me_query",
        "parameters": [
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            },
            "description": "Get information regarding the current logged-in user"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get information regarding the current logged-in user",
        "tags": [
          "me"
        ]
      }
    },
    "/namespace": {
      "get": {
        "description": "Get one namespace",
        "operationId": "oneNamespace_query",
        "parameters": [
          {
            "in": "query",
            "name": "environmentId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "clusterId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "example": "objects_name",
              "format": "k8s-name",
              "pattern": "^[a-z0-9][a-z0-9-.]{0,252}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Namespace"
                }
              }
            },
            "description": "Get one namespace"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get one namespace",
        "tags": [
          "namespaces"
        ]
      }
    },
    "/namespaces": {
      "get": {
        "description": "List namespaces",
        "operationId": "namespaces_query",
        "parameters": [
          {
            "in": "query",
            "name": "environmentId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "clusterId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "example": "objects_name",
              "format": "k8s-name",
              "pattern": "^[a-z0-9][a-z0-9-.]{0,252}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Namespace"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List namespaces"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "List namespaces",
        "tags": [
          "namespaces"
        ]
      }
    },
    "/namespaces/{id}": {
      "get": {
        "description": "Get namespace",
        "operationId": "namespace_query",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Namespace"
                }
              }
            },
            "description": "Get namespace"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get namespace",
        "tags": [
          "namespace"
        ]
      }
    },
    "/namespaces/{id}/environment": {
      "put": {
        "description": "Associate namespace to environment",
        "operationId": "associateNamespaceToEnv_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "environmentId": {
                    "example": "obj_12345",
                    "format": "id",
                    "pattern": "^[A-Za-z]+_[a-z0-9]+$",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Namespace"
                }
              }
            },
            "description": "Associate namespace to environment"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Associate namespace to environment",
        "tags": [
          "namespaces"
        ]
      }
    },
    "/organizations": {
      "get": {
        "description": "List organizations",
        "operationId": "organizations_query",
        "parameters": [
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List organizations"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "List organizations",
        "tags": [
          "organizations"
        ]
      },
      "post": {
        "description": "Create a new organization",
        "operationId": "createOrganization_mutation",
        "parameters": [
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            },
            "description": "Create a new organization"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Create a new organization",
        "tags": [
          "organizations"
        ]
      }
    },
    "/organizations/{id}": {
      "get": {
        "description": "Get organization",
        "operationId": "organization_query",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            },
            "description": "Get organization"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get organization",
        "tags": [
          "organizations"
        ]
      },
      "patch": {
        "description": "Update organization",
        "operationId": "updateOrganization_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "imageURL": {
                    "format": "omitempty,url",
                    "type": "string"
                  },
                  "name": {
                    "example": "Object name",
                    "format": "custom-name",
                    "pattern": "^[A-Za-z][A-Za-z0-9- _]{0,61}[A-Za-z0-9]$",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            },
            "description": "Update organization"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Update organization",
        "tags": [
          "organizations"
        ]
      }
    },
    "/organizations/{id}/users/{userId}": {
      "delete": {
        "description": "Remove user from organization",
        "operationId": "removeUserFromOrganization_mutation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Remove user from organization"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Remove user from organization",
        "tags": [
          "organizations"
        ]
      }
    },
    "/service": {
      "get": {
        "description": "Get service by filters",
        "operationId": "oneService_query",
        "parameters": [
          {
            "in": "query",
            "name": "environmentId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "namespaceId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "example": "objects_name",
              "format": "k8s-name",
              "pattern": "^[a-z0-9][a-z0-9-.]{0,252}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            },
            "description": "Get service by filters"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get service by filters",
        "tags": [
          "services"
        ]
      }
    },
    "/services": {
      "get": {
        "description": "List services",
        "operationId": "services_query",
        "parameters": [
          {
            "in": "query",
            "name": "environmentId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "namespaceId",
            "required": false,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "example": "objects_name",
              "format": "k8s-name",
              "pattern": "^[a-z0-9][a-z0-9-.]{0,252}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List services"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "List services",
        "tags": [
          "services"
        ]
      }
    },
    "/services/{id}": {
      "get": {
        "description": "Get service",
        "operationId": "service_query",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            },
            "description": "Get service"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get service",
        "tags": [
          "services"
        ]
      }
    },
    "/users": {
      "get": {
        "description": "List users",
        "operationId": "users_query",
        "parameters": [
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List users"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "List users",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Get user",
        "operationId": "user_query",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "obj_12345",
              "format": "id",
              "pattern": "^[A-Za-z]+_[a-z0-9]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Get user"
          },
          "400": {
            "$ref": "#/components/responses/BAD_REQUEST"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHENTICATED"
          },
          "403": {
            "$ref": "#/components/responses/FORBIDDEN"
          },
          "404": {
            "$ref": "#/components/responses/NOT_FOUND"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "422": {
            "$ref": "#/components/responses/BAD_USER_INPUT"
          },
          "500": {
            "$ref": "#/components/responses/INTERNAL_SERVER_ERROR"
          },
          "default": {
            "$ref": "#/components/responses/UNEXPECTED_ERROR"
          }
        },
        "summary": "Get user",
        "tags": [
          "users"
        ]
      }
    }
  },
  "security": [
    {
      "oauth2": [
      ]
    },
    {
      "accessTokenCookie": [
      ],
      "organizationCookie": [
      ]
    },
    {
      "bearerAuth": [
      ],
      "organizationHeader": [
      ]
    }
  ],
  "servers": [
    {
      "description": "Otterize API Server",
      "url": "/api/rest/v1beta"
    }
  ],
  "tags": [
  ]
}