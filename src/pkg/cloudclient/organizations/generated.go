// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package organizations

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// CreateOrgCreateOrganization includes the requested fields of the GraphQL type Organization.
type CreateOrgCreateOrganization struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns CreateOrgCreateOrganization.Id, and is useful for accessing the field via an interface.
func (v *CreateOrgCreateOrganization) GetId() string { return v.Id }

// GetName returns CreateOrgCreateOrganization.Name, and is useful for accessing the field via an interface.
func (v *CreateOrgCreateOrganization) GetName() string { return v.Name }

// CreateOrgResponse is returned by CreateOrg on success.
type CreateOrgResponse struct {
	// Create a new organization
	CreateOrganization CreateOrgCreateOrganization `json:"createOrganization"`
}

// GetCreateOrganization returns CreateOrgResponse.CreateOrganization, and is useful for accessing the field via an interface.
func (v *CreateOrgResponse) GetCreateOrganization() CreateOrgCreateOrganization {
	return v.CreateOrganization
}

// GetOrganizationOrganization includes the requested fields of the GraphQL type Organization.
type GetOrganizationOrganization struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns GetOrganizationOrganization.Id, and is useful for accessing the field via an interface.
func (v *GetOrganizationOrganization) GetId() string { return v.Id }

// GetName returns GetOrganizationOrganization.Name, and is useful for accessing the field via an interface.
func (v *GetOrganizationOrganization) GetName() string { return v.Name }

// GetOrganizationResponse is returned by GetOrganization on success.
type GetOrganizationResponse struct {
	// Get organization
	Organization GetOrganizationOrganization `json:"organization"`
}

// GetOrganization returns GetOrganizationResponse.Organization, and is useful for accessing the field via an interface.
func (v *GetOrganizationResponse) GetOrganization() GetOrganizationOrganization {
	return v.Organization
}

// ListOrganizationsOrganizationsOrganization includes the requested fields of the GraphQL type Organization.
type ListOrganizationsOrganizationsOrganization struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns ListOrganizationsOrganizationsOrganization.Id, and is useful for accessing the field via an interface.
func (v *ListOrganizationsOrganizationsOrganization) GetId() string { return v.Id }

// GetName returns ListOrganizationsOrganizationsOrganization.Name, and is useful for accessing the field via an interface.
func (v *ListOrganizationsOrganizationsOrganization) GetName() string { return v.Name }

// ListOrganizationsResponse is returned by ListOrganizations on success.
type ListOrganizationsResponse struct {
	// List organizations
	Organizations []ListOrganizationsOrganizationsOrganization `json:"organizations"`
}

// GetOrganizations returns ListOrganizationsResponse.Organizations, and is useful for accessing the field via an interface.
func (v *ListOrganizationsResponse) GetOrganizations() []ListOrganizationsOrganizationsOrganization {
	return v.Organizations
}

// UpdateOrgNameResponse is returned by UpdateOrgName on success.
type UpdateOrgNameResponse struct {
	// Update organization
	UpdateOrganization UpdateOrgNameUpdateOrganization `json:"updateOrganization"`
}

// GetUpdateOrganization returns UpdateOrgNameResponse.UpdateOrganization, and is useful for accessing the field via an interface.
func (v *UpdateOrgNameResponse) GetUpdateOrganization() UpdateOrgNameUpdateOrganization {
	return v.UpdateOrganization
}

// UpdateOrgNameUpdateOrganization includes the requested fields of the GraphQL type Organization.
type UpdateOrgNameUpdateOrganization struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns UpdateOrgNameUpdateOrganization.Id, and is useful for accessing the field via an interface.
func (v *UpdateOrgNameUpdateOrganization) GetId() string { return v.Id }

// GetName returns UpdateOrgNameUpdateOrganization.Name, and is useful for accessing the field via an interface.
func (v *UpdateOrgNameUpdateOrganization) GetName() string { return v.Name }

// __GetOrganizationInput is used internally by genqlient
type __GetOrganizationInput struct {
	Id string `json:"id"`
}

// GetId returns __GetOrganizationInput.Id, and is useful for accessing the field via an interface.
func (v *__GetOrganizationInput) GetId() string { return v.Id }

// __UpdateOrgNameInput is used internally by genqlient
type __UpdateOrgNameInput struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns __UpdateOrgNameInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateOrgNameInput) GetId() string { return v.Id }

// GetName returns __UpdateOrgNameInput.Name, and is useful for accessing the field via an interface.
func (v *__UpdateOrgNameInput) GetName() string { return v.Name }

func CreateOrg(
	ctx context.Context,
	client graphql.Client,
) (*CreateOrgResponse, error) {
	req := &graphql.Request{
		OpName: "CreateOrg",
		Query: `
mutation CreateOrg {
	createOrganization {
		id
		name
	}
}
`,
	}
	var err error

	var data CreateOrgResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetOrganization(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetOrganizationResponse, error) {
	req := &graphql.Request{
		OpName: "GetOrganization",
		Query: `
query GetOrganization ($id: ID!) {
	organization(id: $id) {
		id
		name
	}
}
`,
		Variables: &__GetOrganizationInput{
			Id: id,
		},
	}
	var err error

	var data GetOrganizationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func ListOrganizations(
	ctx context.Context,
	client graphql.Client,
) (*ListOrganizationsResponse, error) {
	req := &graphql.Request{
		OpName: "ListOrganizations",
		Query: `
query ListOrganizations {
	organizations {
		id
		name
	}
}
`,
	}
	var err error

	var data ListOrganizationsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateOrgName(
	ctx context.Context,
	client graphql.Client,
	id string,
	name string,
) (*UpdateOrgNameResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateOrgName",
		Query: `
mutation UpdateOrgName ($id: ID!, $name: String) {
	updateOrganization(id: $id, name: $name) {
		id
		name
	}
}
`,
		Variables: &__UpdateOrgNameInput{
			Id:   id,
			Name: name,
		},
	}
	var err error

	var data UpdateOrgNameResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
