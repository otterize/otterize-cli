// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package orgs

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// CreateOrgCreateOrganization includes the requested fields of the GraphQL type Organization.
type CreateOrgCreateOrganization struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns CreateOrgCreateOrganization.Id, and is useful for accessing the field via an interface.
func (v *CreateOrgCreateOrganization) GetId() string { return v.Id }

// GetName returns CreateOrgCreateOrganization.Name, and is useful for accessing the field via an interface.
func (v *CreateOrgCreateOrganization) GetName() string { return v.Name }

// CreateOrgResponse is returned by CreateOrg on success.
type CreateOrgResponse struct {
	CreateOrganization CreateOrgCreateOrganization `json:"createOrganization"`
}

// GetCreateOrganization returns CreateOrgResponse.CreateOrganization, and is useful for accessing the field via an interface.
func (v *CreateOrgResponse) GetCreateOrganization() CreateOrgCreateOrganization {
	return v.CreateOrganization
}

func CreateOrg(
	ctx context.Context,
	client graphql.Client,
) (*CreateOrgResponse, error) {
	req := &graphql.Request{
		OpName: "CreateOrg",
		Query: `
mutation CreateOrg {
	createOrganization {
		id
		name
	}
}
`,
	}
	var err error

	var data CreateOrgResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
